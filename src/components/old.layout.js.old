import React from 'react'
import PropTypes from 'prop-types'
import styled, { ThemeProvider, createGlobalStyle } from 'styled-components'
import { StaticQuery, graphql } from 'gatsby'
import Header from './header'
import './layout.css'

const Container = styled.div`
  margin: 3rem auto;
  max-width: 600px;
  display: flex;
  flex-direction: column;
  /* align-items: center; */
  justify-content: center;
`

// Define what props.theme will look like
const theme = {
  background: 'red',
  maxWidth: '1000px'
}

const StyledLayout = styled.div`
  background: white;
  color: #5a535b;
`

const GlobalStyle = createGlobalStyle`
  @font-face {
    font-family: 'josefinsans';
    src: url('/public/static/fonts/josefinsans.woff') format('woff');
    font-weight: normal;
    font-style: normal;
  }
  html {
    box-sizing: border-box;
    font-size: 10px;
  }
  *, *:before, *:after {
    box-sizing: inherit;
  }
  body {
    padding: 0;
    margin: 0;
    font-size: 1.5rem;
    line-height: 2;
    font-family: 'radnika_next';
  }
  a {
    text-decoration: none;
    color: ${theme.black};
  }
  button {  font-family: 'radnika_next'; }
`

const Layout = ({ children }) => (
  <StaticQuery
    query={graphql`
      query SiteTitleQuery {
        site {
          siteMetadata {
            title
          }
        }
      }
    `}
    render={data => (
      <>
        <StyledLayout>
          <ThemeProvider theme={theme}>
            <Header siteTitle={data.site.siteMetadata.title} />
            <Container>
              {children}
              <footer>
                Â© {new Date().getFullYear()}, Built with
                {` `}
                <a href="https://www.gatsbyjs.org">Gatsby</a>
              </footer>
            </Container>
          </ThemeProvider>
        </StyledLayout>
      </>
    )}
  />
)

Layout.propTypes = {
  children: PropTypes.node.isRequired
}

export default Layout
